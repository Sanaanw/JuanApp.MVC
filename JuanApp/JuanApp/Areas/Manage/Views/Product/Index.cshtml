@model PaginatedList<Product>

<div class="pc-content container mt-4">

    <!-- Create New Button -->
    <div class="mb-3">
        <a asp-area="Manage" asp-controller="Product" asp-action="Create" class="btn btn-success">Create New</a>
    </div>

    <!-- Product Table -->
    <table class="table table-striped table-bordered text-center">
        <thead class="table-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Image</th>
                <th scope="col">Name</th>
                <th scope="col">Created Date</th>
                <th scope="col">Updated Date</th>
                <th scope="col">Settings</th>
            </tr>
        </thead>
        <tbody>
            @{
                int count = 1;
            }
            @foreach (var product in Model)
            {
                <tr>
                    <th scope="row">@count</th>
                    <td>
                        <img style="width:60px;height:70px"
                             src="~/assets/img/product/@product.ProductImages.FirstOrDefault(a=>a.Status==true)?.Name"
                             alt="">
                    </td>
                    <td>@product.Name</td>
                    <td>@product.CreatedDate?.ToString("dd MMMM, yyyy")</td>
                    <td>@product.UpdatedDate?.ToString("dd MMMM, yyyy")</td>
                    <td>
                        <a asp-area="Manage" asp-controller="Product" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-sm btn-primary me-1">Edit</a>
                        <a asp-area="Manage" asp-controller="Product" asp-action="Detail" asp-route-id="@product.Id" class="btn btn-sm btn-info me-1">Detail</a>
                        <a asp-area="Manage" asp-controller="Product" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-sm btn-danger deleteProduct">Delete</a>

                    </td>
                </tr>
                count++;
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
        <ul class="pagination">
            <li class="page-item @(Model.HasPrev ? "" : "disabled")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Math.Max(1, Model.CurrentPage - 1))">Previous</a>
            </li>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
            <li class="page-item @(Model.HasNext ? "" : "disabled")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Math.Min(Model.PageCount, Model.CurrentPage + 1))">Next</a>
            </li>
        </ul>
    </nav>

</div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".deleteProduct").forEach(function (btn) {
                btn.addEventListener("click", function (e) {
                    e.preventDefault();
                    const url = this.getAttribute("href");

                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(url, {
                                method: "POST"
                            })
                            .then(res => {
                                if (res.ok) {
                                    Swal.fire("Deleted!", "The product has been deleted.", "success");
                                    setTimeout(() => window.location.reload(), 1000);
                                } else {
                                    Swal.fire("Oops...", "Something went wrong!", "error");
                                }
                            });
                        }
                    });
                });
            });
        });
    </script>
}


